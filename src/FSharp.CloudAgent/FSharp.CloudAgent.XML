<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>FSharp.CloudAgent</name></assembly>
<members>
<member name="T:FSharp.CloudAgent.ActorKey.ActorKey">
<summary>
 Represents a unique key to identify an agent / actor.
</summary>
</member>
<member name="T:FSharp.CloudAgent.ActorKey">
<summary>
 Represents a unique key to identify an agent / actor.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Connections.CloudConnection.ActorCloudConnection">
<summary>
 An actor-based cloud that can run workloads in parallel whilst ensuring sequential workloads per-actor.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Connections.CloudConnection.WorkerCloudConnection">
<summary>
 A generic worker cloud that can run workloads in parallel.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Connections.CloudConnection">
<summary>
 Represents a connection to a pool of agents.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Connections.Queue.Queue">
<summary>
 Represents a service bus queue.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Connections.Queue">
<summary>
 Represents a service bus queue.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Connections.ServiceBusConnection.ServiceBusConnection">
<summary>
 Represents details of a connection to an Azure Service Bus.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Connections.ServiceBusConnection">
<summary>
 Represents details of a connection to an Azure Service Bus.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Messaging.SimpleCloudMessage">
<summary>
 Contains the raw data of a cloud message.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Messaging.CloudAgentKind`1.ResilientCloudAgent">
<summary>
 A cloud agent that requires explicit completion of processed message, with automatic retry and dead lettering.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Messaging.CloudAgentKind`1.BasicCloudAgent">
<summary>
 A simple cloud agent that offers simple forward-only processing of messages.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Messaging.CloudAgentKind`1">
<summary>
 Represents the kinds of F# Agents that can be bound to an Azure Service Bus Queue for processing distributed messages, optionally with automatic retry.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Messaging.MessageProcessedStatus.Abandoned">
<summary>
 The message cannot be processed and should be not be attempted again.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Messaging.MessageProcessedStatus.Failed">
<summary>
 The message was not processed successfully and should be returned to the queue for processing again.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Messaging.MessageProcessedStatus.Completed">
<summary>
 The message successfully completed.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Messaging.MessageProcessedStatus">
<summary>
 The different completion statuses a CloudMessage can have.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Messaging.Dispatch.MessageDispatcher`1">
<summary>
 Contains configuration details for posting messages to a cloud of agents or actors.
</summary>
</member>
<member name="M:FSharp.CloudAgent.Messaging.Dispatch.createMessageDispatcher``1(System.String,System.String)">
<summary>
 Creates a dispatcher using default settings.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Messaging.Dispatch">
<summary>
 Manages dispatching of messages to a service bus queue.
</summary>
</member>
<member name="M:FSharp.CloudAgent.Messaging.Helpers.withAutomaticRetry``2(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.FSharpOption{``0}}},``1)">
<summary>
 Asynchronously gets the &quot;next&quot; item, repeatedly calling the supply getItem function
 until it returns something.
</summary>
</member>
<member name="M:FSharp.CloudAgent.Messaging.Helpers.ProcessBrokeredMessage``1(FSharp.CloudAgent.Messaging.Serialization.ISerializer{``0},FSharp.CloudAgent.Messaging.CloudAgentKind{``0},FSharp.CloudAgent.Messaging.SimpleCloudMessage)">
<summary>
 Knows how to process a single brokered message from the service bus, with error handling
 and processing by the target queue.
</summary>
</member>
<member name="M:FSharp.CloudAgent.Messaging.Serialization.ISerializer`1.Serialize(`0)">
<summary>
 Serializes an object into a string.
</summary>
</member>
<member name="M:FSharp.CloudAgent.Messaging.Serialization.ISerializer`1.Deserialize(System.String)">
<summary>
 Deserializes a string back into an object.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Messaging.Serialization.ISerializer`1">
<summary>
 Manages serialization / deserialization for putting messages on the queue.
</summary>
</member>
<member name="M:FSharp.CloudAgent.Messaging.Serialization.JsonSerializer``1">
<summary>
 A serializer using Newtonsoft&apos;s JSON .NET serializer.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Messaging.Streams.IActorMessageStream">
<summary>
 Represents a stream of messages for a specific actor.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Messaging.Streams.ICloudMessageStream">
<summary>
 Represents a stream of cloud messages.
</summary>
</member>
<member name="M:FSharp.CloudAgent.Actors.IActorStore`1.RemoveActor(FSharp.CloudAgent.ActorKey)">
<summary>
 Tells the store that an actor is no longer required and can be safely removed.
</summary>
</member>
<member name="M:FSharp.CloudAgent.Actors.IActorStore`1.GetActor(FSharp.CloudAgent.ActorKey)">
<summary>
 Requests an actor for a particular key.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Actors.IActorStore`1">
<summary>
 Manages lifetime of actors.
</summary>
</member>
<member name="T:FSharp.CloudAgent.Actors.Factory.AgentSelectorFunc`1">
<summary>
 Selects an agent to consume a message.
</summary>
</member>
<member name="M:FSharp.CloudAgent.Actors.Factory.CreateAgentSelector``1(System.Int32,Microsoft.FSharp.Core.FSharpFunc{FSharp.CloudAgent.ActorKey,FSharp.CloudAgent.Messaging.CloudAgentKind{``0}})">
<summary>
 Generates a pool of CloudAgents of a specific size that can be used to select an agent when required.
</summary>
</member>
<member name="M:FSharp.CloudAgent.Actors.Factory.CreateActorStore``1(Microsoft.FSharp.Core.FSharpFunc{FSharp.CloudAgent.ActorKey,FSharp.CloudAgent.Messaging.CloudAgentKind{``0}})">
<summary>
 Creates an IActorStore that can add / retrieve / remove agents in a threadsafe manner, using the supplied function to create new agents on demand.
</summary>
</member>
<member name="M:FSharp.CloudAgent.ConnectionFactory.SendToActorPoolBatch``1(FSharp.CloudAgent.Connections.CloudConnection,FSharp.CloudAgent.ActorKey,System.Collections.Generic.IEnumerable{``0})">
<summary>
 Posts a collection of messages to a single actor.
</summary>
</member>
<member name="M:FSharp.CloudAgent.ConnectionFactory.SendToActorPool``1(FSharp.CloudAgent.Connections.CloudConnection,FSharp.CloudAgent.ActorKey,``0)">
<summary>
 Posts a message to a single actor.
</summary>
</member>
<member name="M:FSharp.CloudAgent.ConnectionFactory.SendToWorkerPoolBatch``1(FSharp.CloudAgent.Connections.CloudConnection,System.Collections.Generic.IEnumerable{``0})">
<summary>
 Posts a collection of messages to a pool of workers.
</summary>
</member>
<member name="M:FSharp.CloudAgent.ConnectionFactory.SendToWorkerPool``1(FSharp.CloudAgent.Connections.CloudConnection,``0)">
<summary>
 Posts a message to a pool of workers.
</summary>
</member>
<member name="M:FSharp.CloudAgent.ConnectionFactory.StartListening``1(FSharp.CloudAgent.Connections.CloudConnection,Microsoft.FSharp.Core.FSharpFunc{FSharp.CloudAgent.ActorKey,FSharp.CloudAgent.Messaging.CloudAgentKind{``0}})">
 <summary>
 Starts listening to Azure for messages that are handled by agents.
 </summary>
 <param name="cloudConnection">The connection to the Azure service bus that will provide messages.</param>
 <param name="createAgentFunc">A function that can create a single F# Agent to handle messages.</param>
</member>
<member name="M:FSharp.CloudAgent.ConnectionFactory.StartListeningWithWireSerializer``1(FSharp.CloudAgent.Connections.CloudConnection,Microsoft.FSharp.Core.FSharpFunc{FSharp.CloudAgent.ActorKey,FSharp.CloudAgent.Messaging.CloudAgentKind{``0}},System.Runtime.Serialization.DataContractSerializer)">
 <summary>
 Starts listening to Azure for messages that are handled by agents.
 </summary>
 <param name="cloudConnection">The connection to the Azure service bus that will provide messages.</param>
 <param name="createAgentFunc">A function that can create a single F# Agent to handle messages.</param>
 <param name="wireSerializer">An XmlObjectSerializer used to serialize data stream coming off the service bus.</param>
</member>
<member name="M:FSharp.CloudAgent.ConnectionFactory.Workers.BindToCloud``1(FSharp.CloudAgent.Messaging.Streams.ICloudMessageStream,FSharp.CloudAgent.ConnectionFactory.Workers.WorkerCloudOptions{``0})">
<summary>
 Binds CloudAgents to an Azure service bus queue using custom configuration options.
</summary>
</member>
<member name="T:FSharp.CloudAgent.ConnectionFactory.Actors.ActorCloudOptions`1">
<summary>
 Contains configuration details for connecting to an Actor Cloud.
</summary>
</member>
<member name="M:FSharp.CloudAgent.ConnectionFactory.Actors.BindToCloud``1(Microsoft.FSharp.Core.FSharpFunc{Microsoft.FSharp.Core.Unit,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.FSharpOption{FSharp.CloudAgent.Messaging.Streams.IActorMessageStream}}},FSharp.CloudAgent.ConnectionFactory.Actors.ActorCloudOptions{``0})">
<summary>
 Binds a Cloud Agent to a session-enabled Azure Service Bus Queue with affinity between
 sessions and agents, using an IActorStore to manage actor lifetime.
</summary>
</member>
<member name="T:FSharp.CloudAgent.ConnectionFactory">
<summary>
 Contains connectors for F# Agents to Azure Service Bus Queues as either Workers or Actors.
</summary>
</member>
</members>
</doc>
